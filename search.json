[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 surveymonkey authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/qdocs.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"How to format your questionnaire document","text":"two ways write plain-text questionnaire QDOC: allows quickly conveniently write questions doesn’t allow multi-line choices/rows/columns leaves less ambiguity / room error parsing multi-line choices, rows, columns requires specificity (e.g. question type, delineating choices) QDOCs can also written Google Docs long conform either format. QDOC format meant compatible SurveyMonkey API Qualtrics text formats.","code":""},{"path":"/articles/qdocs.html","id":"syntax","dir":"Articles","previous_headings":"","what":"Syntax","title":"How to format your questionnaire document","text":"following tags used simple-text, advanced-text, Google Doc questionnaires. Note case-insensitive (.e. [[PAGE]] operates [[Page]]): [[Block]]: Insert new block tag. [[Page]]: Insert new page tag (SurveyMonkey, behaves [[Block]]). aliases: [[PageBreak]] [[MultipleAnswer]]: Denote present question multi-answer multi-select (respondent can select “apply”). Can put anywhere question text heading. [[Required]]: Denote present question required. Can put anywhere question text heading. [[Choices]]: Denote start line-separated choices present question. [[Rows]]: Denote start line-separated row labels present matrix question. aliases: [[Choices]] [[Columns]]: Denote start line-separated column labels present matrix question. aliases: [[Answers]], [[Cols]] [[{Family}]]: Denote present question particular family. Can put anywhere question text heading. [[ID:{Question Bank ID}]]: replaced text question specified ID SurveyMonkey Question Bank. following tags used advanced-text questionnaires: [[Question:{Family}]]: Specify family question follows tag. Must insert question text. Values include: MultipleChoice (aliases: MC) Matrix Datetime OpenEnded (aliases: TextEntry, TE, Open) [[Question:{Type}:{Subtype}]]: Specify subtype within specified family (e.g. Multi-Select, Menu Dropdown) question follows tag. Must insert question text. [[Advanced{Choices|Rows|Columns}]]: Denote start possibly multi-line choices/rows/columns. Must denote start choice/row/column [[Choice]] [[Row]] [[Column]]. following values subtype can either specified either alone simple-text mode (e.g. [[{Subtype}]]) attached question type advanced-text mode (see ): Vertical Dropdown Menu Single SingleAnswer Multi MultiAnswer MultiSelect Essay Numerical Form","code":""},{"path":"/articles/qdocs.html","id":"question-families","dir":"Articles","previous_headings":"","what":"Question Families","title":"How to format your questionnaire document","text":"Question families subtypes meant match SurveyMonkey API families subtypes, also compatible Qualtrics questionnaire tags.","code":""},{"path":"/articles/qdocs.html","id":"multiple-choice-single-answer","dir":"Articles","previous_headings":"Question Families","what":"Multiple Choice (Single Answer)","title":"How to format your questionnaire document","text":"Also simply called “Single Choice”. Examples simple-text format (key either line separation [[Choices]] tag): Examples advanced-text format: Note equivalence following: [[Question:MultipleChoice]] (defaults single-answer) [[Question:MC]] [[Question:MC:SingleAnswer]] [[Question:MC]] .. [[SingleAnswer]]","code":"1. Which monkey would you rather have as a pet?  Baboon Capuchin Howler Mandrill  2. Which monkey would you rather have as a pet?  - Baboon - Capuchin - Howler - Mandrill  3. Which monkey would you rather have as a pet?    1. Baboon   2. Capuchin   3. Howler   4. Mandrill  4. Which monkey would you rather have as a pet? [[Dropdown]]  Baboon Capuchin Howler Mandrill  5. Which monkey would you rather have as a pet? [[Choices]] Baboon Capuchin Howler Mandrill [[Question:MultipleChoice]] Which monkey would you rather have as a pet? [[Choices]] Baboon Capuchin Howler Mandrill  [[Question:MultipleChoice:SingleAnswer]] Which monkey would you rather have as a pet? [[AdvancedChoices]] [[Choice]] Yellow Baboon [[Choice]] Tufted Capuchin [[Choice]] Black Howler [[Choice]] Japanese Mandrill  [[Question:MC:SingleAnswer:Dropdown]] Which monkey would you rather have as a pet? [[Choices]] Baboon Capuchin Howler Mandrill"},{"path":"/articles/qdocs.html","id":"multiple-choice-multi-answer","dir":"Articles","previous_headings":"Question Families","what":"Multiple Choice (Multi Answer)","title":"How to format your questionnaire document","text":"Note: explicit “” option still works. Examples simple-text format (key either line separation [[Choices]] tag): Note \"Select apply\" question text automatically tags question multi-answer question. Examples advanced-text format:","code":"1. Which monkey would you rather have as a pet? [[MultiAnswer]]  Baboon Capuchin Howler Mandrill  2. Which monkey would you rather have as a pet? [[Multi]]  - Baboon - Capuchin - Howler - Mandrill  3. Which monkey would you rather have as a pet? [[MultiSelect]] [[Choices]] Baboon Capuchin Howler Mandrill  4. Which monkey would you rather have as a pet? (Select all that apply)  Baboon Capuchin Howler Mandrill [[Question:MultipleChoice:MultiAnswer]] Which monkey would you rather have as a pet? [[Choices]] Baboon Capuchin Howler Mandrill  [[Question:MultipleChoice:MultiSelect]] Which monkey would you rather have as a pet? [[AdvancedChoices]] [[Choice]] Yellow Baboon [[Choice]] Tufted Capuchin [[Choice]] Black Howler [[Choice]] Japanese Mandrill  [[Question:MC:MultiAnswer:MultiSelect]] Which monkey would you rather have as a pet? [[Choices]] Baboon Capuchin Howler Mandrill"},{"path":"/articles/qdocs.html","id":"matrix","dir":"Articles","previous_headings":"Question Families","what":"Matrix","title":"How to format your questionnaire document","text":"Note: svmkR currently supports single-choice matrices (single) multi-select matrices (multi). Rating (rating) ranked-choice (ranking) expected future release. Examples simple-text format: Examples advanced-text format:","code":"1. How strongly do you like or dislike each of the following monkeys?  Baboon Capuchin Howler Mandrill  Strongly like Somewhat like Neutral Somewhat dislike Strongly like  2. How strongly do you like or dislike each of the following monkeys? [[Rows]] Baboon Capuchin Howler Mandrill [[Columns]] Strongly like Somewhat like Neutral Somewhat dislike Strongly like  3. How strongly do you like or dislike each of the following monkeys? [[Choices]] Baboon Capuchin Howler Mandrill [[Answers]] Strongly like Somewhat like Neutral Somewhat dislike Strongly like  3. How strongly do you like or dislike each of the following monkeys? [[Matrix]] [[Choices]] Baboon Capuchin Howler Mandrill [[Answers]] Strongly like Somewhat like Neutral Somewhat dislike Strongly like [[Question:Matrix]] How strongly do you like or dislike each of the following monkeys? [[Rows]] Baboon Capuchin Howler Mandrill [[Columns]] Strongly like Somewhat like Neutral Somewhat dislike Strongly like  [[Question:Matrix:SingleAnswer]] How strongly do you like or dislike each of the following monkeys? [[AdvancedRows]] [[Row]] Baboon [[Row]] Capuchin [[Row]] Howler [[Row]] Mandrill [[AdvancedColumns]] [[Col]] Strongly like [[Col]] Somewhat like [[Col]] Neutral [[Col]] Somewhat dislike [[Col]] Strongly like  [[Question:Matrix:MultiAnswer]] How would you describe each of the following monkeys? Select all that apply. [[AdvancedRows]] [[Row]] Baboon [[Row]] Capuchin [[Row]] Howler [[Row]] Mandrill [[AdvancedColumns]] [[Col]] Capricious [[Col]] Mischievous [[Col]] Rambunctious [[Col]] Adorable [[Col]] Intelligent"},{"path":"/articles/qdocs.html","id":"open-ended","dir":"Articles","previous_headings":"Question Families","what":"Open Ended","title":"How to format your questionnaire document","text":"Examples simple-text format: Examples advanced-text format:","code":"1. In a few words, describe the ideal monkey. [[Open]]  2. In a few words, describe the ideal monkey. [[OpenEnded]]  3. In a few words, describe the ideal monkey. [[TextEntry]] [[Question:Open]] In a few words, describe the ideal monkey.  [[Question:OpenEnded:Essay]] In a few words, describe the ideal monkey.  [[Question:TE]] In a few words, describe the ideal monkey. [[Essay]]"},{"path":"/articles/svmkR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"An end-to-end survey research workflow with svmkR","text":"install stable version svmkR GitHub: install development version svmkR GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"soubhikbarari/svmkR\") # install.packages(\"devtools\") devtools::install_github(\"soubhikbarari/svmkR@dev\")"},{"path":"/articles/svmkR.html","id":"authentication","dir":"Articles","previous_headings":"","what":"Authentication","title":"An end-to-end survey research workflow with svmkR","text":"going ’ll need OAuth token, ’ll need set app SurveyMonkey Developer portal. Navigate SurveyMonkey Developer portal. Log SurveyMonkey browser, navigate https://developer.surveymonkey.com/apps. Create app. private, enable relevant scopes: Create/Modify Surveys, View Surveys, View Collectors, View Contacts, View Responses, View Response Details. don’t need click “deploy”, long setting selected updated ’re set. Copy access token. Look settings page app take note “Access Token” field, contain long character string. Add R environment. Add SurveyMonkey account’s OAuth token .Rprofile file. open edit file, run usethis::edit_r_profile(), add line like : options(sm_oauth_token = \"-OAUTH-TOKEN--STEP-3\"). Test works. Restart R changes take effect. set successfully, token print run getOption(\"sm_oauth_token\"). Guard token: don’t share don’t commit repository.","code":""},{"path":"/articles/svmkR.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"An end-to-end survey research workflow with svmkR","text":"following demonstrates write SurveyMonkey workflow covers four major steps survey research: survey creation, response downloading/parsing, weighting, banner creation.","code":""},{"path":"/articles/svmkR.html","id":"create-a-survey","dir":"Articles","previous_headings":"Workflow","what":"Create a survey","title":"An end-to-end survey research workflow with svmkR","text":"creating survey, typically start writing questionnaire. done two options: Program survey SurveyMonkey platform Automatically parse questionnaire upload SurveyMonkey svmkR. second option possible help QDOC, questionnaire syntax developed mark questionnaire document make machine readable. See related vignette(\"qdocs\") details. example QDOC (written simple, less verbose format) might start like : See data(\"qdocs\") examples. questionnaire marked QDOC, can read : Check conforms expectation printing . step question show format parsed . unexpected results, check warnings raised read_qdoc revise original QDOC.","code":"1. How familiar are you with SurveyMonkey? [[Choices]] Very familiar Somewhat familiar Not so familiar Not at all familiar  2. How well do each of the following terms apply to SurveyMonkey? [[Matrix]] [[Rows]] High-quality Innovative Trustworthy Fun Easy to use Fast Flexible Powerful Cost-efficient [[Columns]] Very well Somewhat well Not so well Not at all well # if it's a local file qdoc <- read_qdoc(file = \"my_qdoc.txt\")  # if it's a Google Doc qdoc <- read_qdoc(gdoc = my_qdoc_url)  # if it's a character string qdoc <- read_qdoc(text = my_qdoc) print(qdoc)"},{"path":"/articles/svmkR.html","id":"upload-your-survey","dir":"Articles","previous_headings":"Workflow","what":"Upload your survey","title":"An end-to-end survey research workflow with svmkR","text":"’re happy QDOC, can go ahead upload account particular title.","code":"upload_qdoc(qdoc, title = \"My Survey\")"},{"path":"/articles/svmkR.html","id":"browse-your-surveys","dir":"Articles","previous_headings":"Workflow","what":"Browse your surveys","title":"An end-to-end survey research workflow with svmkR","text":"find ID number survey account, can browse surveys like : easy way retrieve ID number run View(surveys) start typing name survey want search window top right RStudio data.frame viewer. get survey’s ID number. Copy .","code":"surveys <- browse_surveys(200) # see your most recent 200 surveys"},{"path":"/articles/svmkR.html","id":"download-survey-responses","dir":"Articles","previous_headings":"Workflow","what":"Download survey responses","title":"An end-to-end survey research workflow with svmkR","text":"’ve fielded survey (currently can done SurveyMonkey platform), download survey responses first downloading raw survey: first step returns list metadata survey. actually download parse responses, use following: give tidy data.frame responses. future can run one command:","code":"a_survey_obj <- fetch_survey_obj(123456789) # your survey's ID goes here survey_df <- parse_survey(a_survey_obj) survey_df <- fetch_survey_obj(123456789) %>%   parse_survey()"},{"path":"/articles/svmkR.html","id":"estimate-margin-of-error","dir":"Articles","previous_headings":"Workflow","what":"Estimate margin of error","title":"An end-to-end survey research workflow with svmkR","text":"two twin functions can use estimate margin error (MOE) survey. Estimate MOE using asymptotic formula (esti_moe()) Simulate MOE using non-parametric bootstraps (simu_moe()) incorporate weights estimated survey. ’s example using dummy data included package:","code":"data(ev22)  esti_moe(ev22$weight_genpop) simu_moe(ev22$weight_genpop)"},{"path":"/articles/svmkR.html","id":"weight-your-survey","dir":"Articles","previous_headings":"Workflow","what":"Weight your survey","title":"An end-to-end survey research workflow with svmkR","text":"may interested re-weighting survey responses specific target population. see list available populations, can run: find named target suitable application can read target object. can print step distribution, either marginal (one variable) joint (multiple variables), specified target. Note: existing list joint marginal distributions, can also use weighting target. can simply run weight_to using survey dataframe (smda23 example dataset used ) population target. bunch informative output displayed running function help determine whether () automated mapping columns survey dataset variables target object successful (b) quality weights satisfactory. helpful guidance weight surveys, see vignette(\"weights\").","code":"list_targets() tgt <- get_target(\"us_genpop_acs19\") print(tgt) data(\"smda23\") wtd <- weight_to(smda23, target = tgt)"},{"path":"/articles/svmkR.html","id":"create-banners","dir":"Articles","previous_headings":"Workflow","what":"Create banners","title":"An end-to-end survey research workflow with svmkR","text":"Banners bread butter SurveyMonkey Research Insights Team. see svmkR package can , check examples make_banners() write_banners().","code":""},{"path":"/articles/svmkR.html","id":"api-considerations","dir":"Articles","previous_headings":"","what":"API Considerations","title":"An end-to-end survey research workflow with svmkR","text":"account likely limited 500 hits per day API. package print reminders many calls left day. main thing keep eye respondent counts; 100 responses can fetched per API call, survey X respondents make least X/100 calls API.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Soubhik Barari. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barari S (2024). svmkR: Full-Stack Survey Research SurveyMonkey. R package version 1.0.0.","code":"@Manual{,   title = {svmkR: Full-Stack Survey Research with SurveyMonkey},   author = {Soubhik Barari},   year = {2024},   note = {R package version 1.0.0}, }"},{"path":"/index.html","id":"svmkr-full-stack-survey-research-with-surveymonkey-in-r","dir":"","previous_headings":"","what":"Full-Stack Survey Research with SurveyMonkey","title":"Full-Stack Survey Research with SurveyMonkey","text":"package provides suite tools work SurveyMonkey surveys. can: Create upload survey questionnaire document. Browse download surveys account. Conduct basic analysis (e.g. margin error) surveys. Create statistical survey weights (via raking) better represent target population. Create presentable SurveyMonkey-style banners polls.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Full-Stack Survey Research with SurveyMonkey","text":"install production version svmkR GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"soubhikbarari/svmkR\")"},{"path":"/index.html","id":"source","dir":"","previous_headings":"","what":"Source","title":"Full-Stack Survey Research with SurveyMonkey","text":"source code svmkR currently hosted GitHub.","code":""},{"path":"/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Full-Stack Survey Research with SurveyMonkey","text":"Soubhik Barari (creator/maintainer) Zoe Padgett (contributor) Justine Orgel (contributor) Christopher Remmel (contributor) Authors surveymonkey package, svmkR forked re-factored include: Thomas Leeper (creator/maintainer) Sam Firke (creator/maintainer) Matt Roumaya (creator/maintainer)","code":""},{"path":"/reference/browse_question_bank.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse user's question bank — browse_question_bank","title":"Browse user's question bank — browse_question_bank","text":"Retrieve survey question bank available user.","code":""},{"path":"/reference/browse_question_bank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse user's question bank — browse_question_bank","text":"","code":"browse_question_bank(oauth_token = get_token())"},{"path":"/reference/browse_question_bank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse user's question bank — browse_question_bank","text":"oauth_token OAuth 2.0 token. default, retrieved get_token().","code":""},{"path":"/reference/browse_question_bank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse user's question bank — browse_question_bank","text":"dataframe survey questions available user.","code":""},{"path":"/reference/browse_question_bank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Browse user's question bank — browse_question_bank","text":"function calls SurveyMonkey API using current OAuth token returns bank survey questions available user.","code":""},{"path":"/reference/browse_question_bank.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Browse user's question bank — browse_question_bank","text":"SurveyMonkey API V3 https://developer.surveymonkey.com/api/v3/#api-endpoints-get-survey_templates.","code":""},{"path":"/reference/browse_surveys.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse user's surveys — browse_surveys","title":"Browse user's surveys — browse_surveys","text":"Retrieve dataframe user's surveys.","code":""},{"path":"/reference/browse_surveys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse user's surveys — browse_surveys","text":"","code":"browse_surveys(   per_page = 100,   page = NULL,   sort_by = NULL,   sort_order = NULL,   start_modified_at = NULL,   end_modified_at = NULL,   title = NULL,   include = NULL,   folder_id = NULL,   oauth_token = get_token() )"},{"path":"/reference/browse_surveys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse user's surveys — browse_surveys","text":"per_page Integer number set number surveys return per page. Maximum value 1000 surveys per page; try survey first 100, reduce API calls. page Integer number select page resources return. default 1. sort_by String used sort returned survey list: ‘title’, 'date_modified’, 'num_responses’. default, date_modified. sort_order String used set sort order returned surveys: 'ASC’ 'DESC’. default, DESC. start_modified_at Date string used select surveys last modified date. default NULL. end_modified_at Date string used select surveys modified date. default NULL. title String used select survey survey title.  default NULL. include Character vector comma separated string used filter survey list: 'response_count’, 'date_created’, 'date_modified’, 'language’, 'question_count’, 'analyze_url’, 'preview’. default NULL. Use browse_surveys('everything') pull fields. folder_id Specify id folder return surveys . oauth_token OAuth 2.0 token. default, retrieved get_token().","code":""},{"path":"/reference/browse_surveys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse user's surveys — browse_surveys","text":"dataframe surveys associated metadata desired account.","code":""},{"path":"/reference/browse_surveys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Browse user's surveys — browse_surveys","text":"function calls SurveyMonkey API using current OAuth token returns dataframe surveys filtered parameters entered.","code":""},{"path":"/reference/browse_surveys.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Browse user's surveys — browse_surveys","text":"SurveyMonkey API V3 https://developer.surveymonkey.com/api/v3/#surveys.","code":""},{"path":"/reference/browse_team_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse user's team's templates — browse_team_templates","title":"Browse user's team's templates — browse_team_templates","text":"Retrieve dataframe survey templates available user's team.","code":""},{"path":"/reference/browse_team_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse user's team's templates — browse_team_templates","text":"","code":"browse_team_templates(oauth_token = get_token())"},{"path":"/reference/browse_team_templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse user's team's templates — browse_team_templates","text":"oauth_token OAuth 2.0 token. default, retrieved get_token().","code":""},{"path":"/reference/browse_team_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse user's team's templates — browse_team_templates","text":"dataframe team survey templates associated metadata desired account.","code":""},{"path":"/reference/browse_team_templates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Browse user's team's templates — browse_team_templates","text":"function calls SurveyMonkey API using current OAuth token returns dataframe survey template available user's team.","code":""},{"path":"/reference/browse_team_templates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Browse user's team's templates — browse_team_templates","text":"SurveyMonkey API V3 https://developer.surveymonkey.com/api/v3/#api-endpoints-get-team_survey_templates.","code":""},{"path":"/reference/browse_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse user's survey templates — browse_templates","title":"Browse user's survey templates — browse_templates","text":"Retrieve dataframe survey templates available user.","code":""},{"path":"/reference/browse_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse user's survey templates — browse_templates","text":"","code":"browse_templates(oauth_token = get_token())"},{"path":"/reference/browse_templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse user's survey templates — browse_templates","text":"oauth_token OAuth 2.0 token. default, retrieved get_token().","code":""},{"path":"/reference/browse_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse user's survey templates — browse_templates","text":"dataframe survey templates associated metadata desired account.","code":""},{"path":"/reference/browse_templates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Browse user's survey templates — browse_templates","text":"function calls SurveyMonkey API using current OAuth token returns dataframe survey template available user.","code":""},{"path":"/reference/browse_templates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Browse user's survey templates — browse_templates","text":"SurveyMonkey API V3 https://developer.surveymonkey.com/api/v3/#api-endpoints-get-survey_templates.","code":""},{"path":"/reference/code_age_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_age_vars","title":"Code demographic variables in responses — code_age_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_age_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_age_vars","text":"","code":"code_age_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_age_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_age_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_age_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_age_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' age category generation: age: integer age years age3: 3-point age category age6: 6-point age category age_gen: 4-point age category corresponding generation (according Pew Research Center's now-retired classification)","code":""},{"path":"/reference/code_educ_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_educ_vars","title":"Code demographic variables in responses — code_educ_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_educ_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_educ_vars","text":"","code":"code_educ_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_educ_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_educ_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_educ_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_educ_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' educational attainment: educ2: binary indicator college vs. educ4: 4-point educational attainment scale educ: 6-point educational attainment scale","code":""},{"path":"/reference/code_geo_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_geo_vars","title":"Code demographic variables in responses — code_geo_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_geo_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_geo_vars","text":"","code":"code_geo_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_geo_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_geo_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_geo_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_geo_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' geographic location (currently U.S.): zip: 6-digit ZIP code urban4: 4-point urban/rural classification ZIP code based USDA's 2010 RUCA (rural-urban commuting area) coding (Metropolitan, Micropolitan, Small town, Rural) zip: 6-digit ZIP code state_name: state name state_abb: state abbreviation region: U.S. Census region division: U.S. Census division","code":""},{"path":"/reference/code_ideo_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_ideo_vars","title":"Code demographic variables in responses — code_ideo_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_ideo_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_ideo_vars","text":"","code":"code_ideo_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_ideo_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_ideo_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_ideo_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_ideo_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' political ideology: ideo5: 5-point political ideology (.e. Cons, Cons, Mod, Lib, Lib) ideo3: 3-point political ideology (.e. Cons, Mod, Lib)","code":""},{"path":"/reference/code_income_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_income_vars","title":"Code demographic variables in responses — code_income_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_income_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_income_vars","text":"","code":"code_income_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_income_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_income_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_income_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_income_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' income levels: income: original income scale income3: 3-point income scale (.e. <$50k, $50-100k, >$100k)","code":""},{"path":"/reference/code_party_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_party_vars","title":"Code demographic variables in responses — code_party_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_party_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_party_vars","text":"","code":"code_party_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_party_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_party_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_party_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_party_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' U.S. political party affiliation: party5: 5-point U.S. political party leaning (.e. Dem, Lean Dem, Ind, Lean Rep, Rep) party3: 3-point U.S. political party affiliation (.e. \"forced\" Dem, Ind, Rep)","code":""},{"path":"/reference/code_race_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_race_vars","title":"Code demographic variables in responses — code_race_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_race_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_race_vars","text":"","code":"code_race_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_race_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_race_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_race_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_race_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' race /ethnicity race5: 5-point standard Census race category (.e. Non-Hispanic White, Non-Hispanic Black, Hispanic, Asian, ) race4: 4-point categorization collapsing \"Asian\" \"\" (needed weighting schemes) nonwhite: 2-point race category white/non-white","code":""},{"path":"/reference/code_sex_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_sex_vars","title":"Code demographic variables in responses — code_sex_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_sex_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_sex_vars","text":"","code":"code_sex_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_sex_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_sex_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_sex_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_sex_vars","text":"Survey data frame new (updated) columns corresponding (discoverable) respondents' gender identity sexual orientation: lgbtq: 5-point sexual orientation scale (Lesbian, Gay, Bisexual, Heterosexual, ) lgbtq2: 2-point sexual orientation scale (Heterosexual, Non-heterosexual) transgender: binary indicator transgender identity gender_binary: binary indicator gender gender: 3-point scale gender allowing non-binary gender identity","code":""},{"path":"/reference/code_std_demo_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — code_std_demo_vars","title":"Code demographic variables in responses — code_std_demo_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/code_std_demo_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — code_std_demo_vars","text":"","code":"code_std_demo_vars(data, append = TRUE, verbose = TRUE)"},{"path":"/reference/code_std_demo_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — code_std_demo_vars","text":"data Input data frame survey responses. append TRUE, append existing dataframe otherwise return new variables fresh dataframe. verbose Print helpful messages.","code":""},{"path":"/reference/code_std_demo_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — code_std_demo_vars","text":"Survey data frame new (updated) columns corresponding discoverable demographic variables respondents.","code":""},{"path":"/reference/design_eff.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Kish design effect of using a set of weights — design_eff","title":"Estimate the Kish design effect of using a set of weights — design_eff","text":"Kish design effect much variance sample estimator expected increase result post-hoc sample weights.","code":""},{"path":"/reference/design_eff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Kish design effect of using a set of weights — design_eff","text":"","code":"design_eff(weights, na.rm = F)"},{"path":"/reference/design_eff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Kish design effect of using a set of weights — design_eff","text":"weights vector sample weights used adjust sample. na.rm trim entries NA.","code":""},{"path":"/reference/design_eff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Kish design effect of using a set of weights — design_eff","text":"ratio actual sample size effective sample size weights.","code":""},{"path":"/reference/esti_moe.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the margin of error for an overall survey or a single question — esti_moe","title":"Estimate the margin of error for an overall survey or a single question — esti_moe","text":"overall survey: given weights /sample size, maximum margin error gives us upper bound margin error y/n questions across entire survey – estimating hypothetical y/n question 50/50 (inherently uncertain population estimand).","code":""},{"path":"/reference/esti_moe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the margin of error for an overall survey or a single question — esti_moe","text":"","code":"esti_moe(.data = NULL, weights = NULL, n = NULL, x = NULL, conf = 0.95)"},{"path":"/reference/esti_moe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the margin of error for an overall survey or a single question — esti_moe","text":".data data frame optionally pipe dplyr-style (see example). weights vector sample weights used adjust sample (optional n x specified). n sample size suvrey (needed weights x specified). x particular question estimate margin error (specified, estimate survey's MOE instead). conf level statistical confidence estimate error.","code":""},{"path":"/reference/esti_moe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the margin of error for an overall survey or a single question — esti_moe","text":"survey margin error (MOE) \"modeled error\" overall survey question interest.","code":""},{"path":"/reference/esti_moe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the margin of error for an overall survey or a single question — esti_moe","text":"single question: given vector sample responses /weights, margin error estimates margin error plugging known quantiles asymptotic sampling distribution. Estimates asymptotic formula tend smaller using simulated margin error (sim_modeled_error) assumes survey's questions follow asymptotic normal distribution (.e. large sample independent observations). non-probability surveys without design weights, recommended use `sim_modeled_error`.","code":""},{"path":"/reference/esti_moe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the margin of error for an overall survey or a single question — esti_moe","text":"","code":"data(ev22) if (FALSE) { ## not run  # Unweighted maximum margin of error esti_moe(n = nrow(ev22)) esti_moe(weights = rep(1, nrow(ev22)))  # Weighted maximum margin of error esti_moe(weights = ev22$weight_genpop)  # Unweighted margin of error for specific question esti_moe(x = ev22$ev_heard_1)  # Weighted margin of error for specific question ev22 %>%   filter(!is.na(weight_genpop)) %>%   esti_moe(x = ev_heard_1, weights = weight_genpop) }"},{"path":"/reference/ev22.html","id":null,"dir":"Reference","previous_headings":"","what":"SVMK Electric Vehicles Survey 2022 Study — ev22","title":"SVMK Electric Vehicles Survey 2022 Study — ev22","text":"Simulated data based real market research study Electric Vehicles conducted SurveyMonkey Research Insights Team.","code":""},{"path":"/reference/ev22.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVMK Electric Vehicles Survey 2022 Study — ev22","text":"","code":"ev22"},{"path":"/reference/ev22.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SVMK Electric Vehicles Survey 2022 Study — ev22","text":"simulated data frame partially coded survey responses 1000 rows 31 columns: gender Gender (standard research team format) age Age (standard research team format) education Education (standard research team format) incomse Income (standard research team format) vehage \"old main vehicle?\" vehcost \"total, much pay buy lease main vehicle?\" purchase \"purchase lease main vehicle?\" ev_heard_* \"following electric vehicles heard ?\" (select apply) mech_factors_* \"Select top 3 factors important selecting auto repair provider:\" (select apply) sub_services_* \"following services willing pay recurring subscription car?\"  (select apply)","code":""},{"path":"/reference/fetch_survey_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a survey's responses — fetch_survey_obj","title":"Download a survey's responses — fetch_survey_obj","text":"Download survey's responses","code":""},{"path":"/reference/fetch_survey_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a survey's responses — fetch_survey_obj","text":"","code":"fetch_survey_obj(id, oauth_token = get_token())"},{"path":"/reference/fetch_survey_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a survey's responses — fetch_survey_obj","text":"id ID number survey fetched. oauth_token OAuth 2.0 token. default, retrieved get_token().","code":""},{"path":"/reference/fetch_survey_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a survey's responses — fetch_survey_obj","text":"survey object type qdoc, nested list containing info survey underlying questionnaire. Note can print object informative summary like can qdoc object.","code":""},{"path":"/reference/fetch_survey_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a survey's responses — fetch_survey_obj","text":"","code":"# not run: # fetch_survey_obj(123456789)"},{"path":"/reference/find_skip_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and code skip rules from survey responses — find_skip_rules","title":"Find and code skip rules from survey responses — find_skip_rules","text":"Given dataframe survey responses, reverse engineer skip rules based completion patterns (optionally user input) order distinguish/re-code \"applicable\" NA values \"answer\" NA values.","code":""},{"path":"/reference/find_skip_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and code skip rules from survey responses — find_skip_rules","text":"","code":"find_skip_rules(   data,   interactive = TRUE,   skip_rule_val = NA,   no_answer_val = \"No answer\" )"},{"path":"/reference/find_skip_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and code skip rules from survey responses — find_skip_rules","text":"data input survey data frame responses (note: function guaranteed work output parse_survey). interactive set TRUE, detect possible skip rules ask re-coding responses; else automatically detect rules re-code responses. skip_rule_val code question responses respondent never saw question due skip rule (default NA tends play nicely banner cross-tab creation). no_answer_val code question responses respondent saw question answer (default \"answer\"). default, retrieved get_token().","code":""},{"path":"/reference/find_skip_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and code skip rules from survey responses — find_skip_rules","text":"survey response dataframe NAs distinguished \"applicable\" responses \"answer\" responses.","code":""},{"path":"/reference/find_skip_rules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find and code skip rules from survey responses — find_skip_rules","text":"Note: skip_rule_val no_answer_val set character strings, corresponding factor variables (relevant question columns) expanded via forcats library include values levels.","code":""},{"path":"/reference/get_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a SurveyMonkey target population — get_target","title":"Get a SurveyMonkey target population — get_target","text":"Read default target population (.e. specific variables marginal joint distributions) available package weight survey .","code":""},{"path":"/reference/get_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a SurveyMonkey target population — get_target","text":"","code":"get_target(name)"},{"path":"/reference/get_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a SurveyMonkey target population — get_target","text":"id name target population read (see list_targets options).","code":""},{"path":"/reference/get_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a SurveyMonkey target population — get_target","text":"list dataframes associated named target population profile.","code":""},{"path":"/reference/get_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve SurveyMonkey OAuth Token — get_token","title":"Retrieve SurveyMonkey OAuth Token — get_token","text":"Retrieves currently set survey monkey oauth token","code":""},{"path":"/reference/get_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve SurveyMonkey OAuth Token — get_token","text":"","code":"get_token()"},{"path":"/reference/list_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up SurveyMonkey target populations — list_targets","title":"Look up SurveyMonkey target populations — list_targets","text":"Look target population profiles (.e. specific variables marginal joint distributions) available weight survey .","code":""},{"path":"/reference/list_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up SurveyMonkey target populations — list_targets","text":"","code":"list_targets()"},{"path":"/reference/list_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up SurveyMonkey target populations — list_targets","text":"list named target population profiles available.","code":""},{"path":"/reference/look_up_weighting_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up weighting survey question — look_up_weighting_question","title":"Look up weighting survey question — look_up_weighting_question","text":"Find information (e.g. applicable survey questions, applicable levels) potential weight-able survey question.","code":""},{"path":"/reference/look_up_weighting_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up weighting survey question — look_up_weighting_question","text":"","code":"look_up_weighting_question(survey.question)"},{"path":"/reference/look_up_weighting_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up weighting survey question — look_up_weighting_question","text":"survey.question name survey question map variable target distribution (see list_targets()).","code":""},{"path":"/reference/look_up_weighting_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up weighting survey question — look_up_weighting_question","text":"dataframe question-variable mappings associated searched survey question.","code":""},{"path":"/reference/look_up_weighting_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up weighting target variable — look_up_weighting_variable","title":"Look up weighting target variable — look_up_weighting_variable","text":"Find information (e.g. applicable survey questions, applicable levels) potential weighting target variable.","code":""},{"path":"/reference/look_up_weighting_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up weighting target variable — look_up_weighting_variable","text":"","code":"look_up_weighting_variable(target.var)"},{"path":"/reference/look_up_weighting_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up weighting target variable — look_up_weighting_variable","text":"target.var name potential target variable used target population profile (see list_targets()).","code":""},{"path":"/reference/look_up_weighting_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up weighting target variable — look_up_weighting_variable","text":"dataframe question-variable mappings associated searched target variable.","code":""},{"path":"/reference/make_banners.html","id":null,"dir":"Reference","previous_headings":"","what":"Create banners from survey data — make_banners","title":"Create banners from survey data — make_banners","text":"Create expss table object cleaned data frame input data frame.","code":""},{"path":"/reference/make_banners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create banners from survey data — make_banners","text":"","code":"make_banners(   data,   include.no.answer = TRUE,   row.vars,   col.vars,   weight.var = NULL,   date.var = NULL,   preview = FALSE,   total.row.position = \"above\",   verbose = FALSE )"},{"path":"/reference/make_banners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create banners from survey data — make_banners","text":"data input data frame survey responses. include..answer TRUE, include \"answer\" cell cross-tabs, otherwise remove / treat NA. row.vars list column names data put banner rows; multi-response variables can specified either regex string (e.g. \"var_*\") nested vector option columns (e.g. c(\"var_1\", \"var_2\",...)). col.vars list column names data put banner columns; multi-response variables can specified either regex string (e.g. \"var_*\") nested vector option columns (e.g. c(\"var_1\", \"var_2\",...)). weight.var optional column name data use weighting. date.var optional column name data specify weighting. preview true, print expss banner table object pretty format. total.row.position place total \"Unweighted N\"s (either \"\" \"\", default \"\"). verbose output helpful debugging messages.","code":""},{"path":"/reference/make_banners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create banners from survey data — make_banners","text":"list banner outputs including expss object cleaned data frame.","code":""},{"path":"/reference/make_banners.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create banners from survey data — make_banners","text":"running, must make sure input data properly labelled/coded according expss conventions (see example ). , make sure values across multi-response variables (.e. 'select apply' type questions) given distinct levels, converted binary categorical (see example).","code":""},{"path":"/reference/make_banners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create banners from survey data — make_banners","text":"","code":"data(ev22) if (FALSE) { ## not run # Prepare data for banners ev22.coded = ev22 %>%   let(     ## code/label categorical variables     age3 = recode(age,                   \"18-34\" = 18 %thru% 34 ~ 1,                    \"35-64\" = 35 %thru% 64 ~ 2,                    \"65+\"   = 65 %thru% hi ~ 3),     gender  = recode(gender,                      \"Male\"   = 1 ~ 1,                      \"Female\" = 2 ~ 2),     income3 = recode(as.numeric(income),                      \"<$50k\"     = 1 %thru% 3 ~ 1,                      \"$50k-100k\" = 4 %thru% 5 ~ 2,                      \">$100k\"    = 6 %thru% 7 ~ 3,                      \"No answer\" = 8 ~ 4),     educ2 = recode(as.numeric(education),                    \"<HS-College\" = 1 %thru% 4 ~ 1,                    \">College\"    = 5 %thru% 6 ~ 2),     purchase = recode(purchase,                       \"Purchased new\"                            = 1 ~ 1,                       \"Purchased used (non-certified pre-owned)\" = 2 ~ 2,                       \"Purchased used (certified pre-owned)\"     = 3 ~ 3,                       \"Leased new\"                               = 4 ~ 4,                       \"Leased used\"                              = 5 ~ 5,                       \"Other\"                                    = 6 ~ 6),     vehage = recode(vehage,                     \"Less than 1 year old\"   = 1 ~ 1,                     \"1 - 2 years old\"        = 2 ~ 2,                     \"3 - 5 years old\"        = 3 ~ 3,                     \"6 - 10 years old\"       = 4 ~ 4,                     \"More than 10 years old\" = 5 ~ 5),     vehcost = recode(vehcost,                      \"Under $5,000\"      = 1 ~ 1,                      \"$5,000 - $9,999\"   = 2 ~ 2,                      \"$10,000 - $19,999\" = 3 ~ 3,                      \"$20,000 - $29,999\" = 4 ~ 4,                      \"$30,000 - $39,999\" = 5 ~ 5,                      \"$40,000 - $49,999\" = 6 ~ 6,                      \"$50,000 - $59,999\" = 7 ~ 7,                      \"$60,000 or more\"   = 8 ~ 8),     ## label multi-response variables     ## note: make sure to re-code dichotomous \"one-hot encoded\" columns into distinct level     ev_heard_1 = recode(ev_heard_1, \"Audi e-tron\" = 1 ~ 1),     ev_heard_2 = recode(ev_heard_2, \"BMW i3\" = 1 ~ 2),     ev_heard_3 = recode(ev_heard_3, \"Cadillac LYRIQ\" = 1 ~ 3),     ev_heard_4 = recode(ev_heard_4, \"Chevrolet Bolt\" = 1 ~ 4),     ev_heard_5 = recode(ev_heard_5, \"Faraday Future\" = 1 ~ 5),     ev_heard_6 = recode(ev_heard_6, \"Fisker\" = 1 ~ 6),     ev_heard_7 = recode(ev_heard_7, \"Hyundai Electric\" = 1 ~ 7),     ev_heard_8 = recode(ev_heard_8, \"Jaguar I-Pace\" = 1 ~ 8),     ev_heard_9 = recode(ev_heard_9, \"Kia Niro EV\" = 1 ~ 9),     ev_heard_10 = recode(ev_heard_10, \"Lucid Motors\" = 1 ~ 10),          mech_factors_1 = recode(mech_factors_1, \"Price / affordability\" = 1 ~ 1),     mech_factors_2 = recode(mech_factors_2, \"Convenience\" = 1 ~ 2),     mech_factors_3 = recode(mech_factors_3, \"Trust / relationship\" = 1 ~ 3),     mech_factors_4 = recode(mech_factors_4, \"Availability\" = 1 ~ 4),          sub_services_1 = recode(sub_services_1, \"In-car internet\" = 1 ~ 1),     sub_services_2 = recode(sub_services_1, \"Remote car start capability\" = 1 ~ 2),     sub_services_3 = recode(sub_services_1, \"Live traffic / navigation\" = 1 ~ 3),     sub_services_4 = recode(sub_services_1, \"In-vehicle safety and security\" = 1 ~ 4),     sub_services_5 = recode(sub_services_1, \"Multiple driver profiles\" = 1 ~ 5),     sub_services_6 = recode(sub_services_1, \"Cloud dash cam monitoring\" = 1 ~ 6),     sub_services_7 = recode(sub_services_1, \"Car software updates\" = 1 ~ 7),     sub_services_8 = recode(sub_services_1, \"AI- and self-driving capabilities\" = 1 ~ 8),     sub_services_9 = recode(sub_services_1, \"Car-only media and streaming services\" = 1 ~ 9),     sub_services_10 = recode(sub_services_1, \"Heated seats\" = 1 ~ 10)   ) %>%   apply_labels(gender         = \"Gender\",                age3           = \"Age: 3 categories\",                educ2          = \"Education\",                income3        = \"Income\",                vehage         = \"How old is your main vehicle?\",                vehcost        = \"In total, how much did you pay to buy or lease your main vehicle?\",                purchase       = \"How did you purchase or lease your main vehicle?\",                ## note: for multiresponse variables, only need to name one column                ev_heard_1     = \"Which of the following electric vehicles have you heard of?\",                mech_factors_1 = \"Select the top 3 factors that are most important to you when selecting an auto repair provider:\",                sub_services_1 = \"Which of the following services would you be willing to pay a recurring subscription for in a car?\")  # Make and save banners   ev22.banners <- ev22.coded %>%   make_banners(row.vars           = list(\"purchase\",\"vehage\",\"ev_heard*\",c(\"mech_factors_1\",\"mech_factors_2\",\"mech_factors_3\",\"mech_factors_4\")),                 col.vars           = list(\"age3\",\"educ2\",c(\"sub_services_1\",\"sub_services_2\",\"sub_services_3\",\"sub_services_4\")),                 weight.var         = \"weight_genpop\",                 date.var           = \"response_date\",                 total.row.position = \"below\",                 preview            = TRUE) %>%   write_banners(file.path         = \"ev22.xlsx\",                 file.overwrite    = TRUE,                 title             = \"Electric Vehicles Study\",                 logo              = \"mntv\",                 drive.overwrite   = TRUE,                 drive.folder.path = \"https://drive.google.com/drive/u/1/folders/0B-OW6-tDrcdMTWw1MFFhdVNQLTg\") }"},{"path":"/reference/n_eff.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Kish effective sample size of using a set of weights — n_eff","title":"Estimate the Kish effective sample size of using a set of weights — n_eff","text":"Kish effective sample size reduced size sample given increase variance.","code":""},{"path":"/reference/n_eff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Kish effective sample size of using a set of weights — n_eff","text":"","code":"n_eff(weights, na.rm = F)"},{"path":"/reference/n_eff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Kish effective sample size of using a set of weights — n_eff","text":"weights vector sample weights used adjust sample. na.rm trim entries NA.","code":""},{"path":"/reference/n_eff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Kish effective sample size of using a set of weights — n_eff","text":"sample size produces equivalent variance introducing sample weights.","code":""},{"path":"/reference/parse_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a survey object and parse it into a tidy dataframe. — parse_survey","title":"Take a survey object and parse it into a tidy dataframe. — parse_survey","text":"Take survey object parse tidy dataframe.","code":""},{"path":"/reference/parse_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a survey object and parse it into a tidy dataframe. — parse_survey","text":"","code":"parse_survey(   surv_obj,   oauth_token = get_token(),   col_names = \"id\",   col_fill = TRUE,   ... )"},{"path":"/reference/parse_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a survey object and parse it into a tidy dataframe. — parse_survey","text":"surv_obj survey, result call fetch_survey_obj. oauth_token OAuth 2.0 token. default, retrieved get_token(). col_names Set column names either names (\"name\") IDs (\"id\", default). Depending question types, column names formatted one following `` element either ID name: '{question heading}' '{question heading} - ' '{question heading} - {matrix row}' '{question heading} - {matrix row} - {matrix column}' col_fill columns extracted multi-select question, fill values. Choices either TRUE \"name\" denoting name question choice. Default TRUE. ... Additional arguments pass get_responses.  See documentation ?get_responses arguments listed.","code":""},{"path":"/reference/parse_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a survey object and parse it into a tidy dataframe. — parse_survey","text":"data.frame (technically tibble) clean responses, one line per respondent.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Exported magrittr package.  learn , run ?magrittr::`%>%`.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/qdoc.question.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a questionnaire question — qdoc.question","title":"Process a questionnaire question — qdoc.question","text":"Takes question written proper QDOC format generates object ready uploaded survey. See vignette(\"qdocs\") guide QDOC format.","code":""},{"path":"/reference/qdoc.question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a questionnaire question — qdoc.question","text":"","code":"qdoc.question(text, quiet.fail = FALSE)  as.qdoc.question(text, quiet.fail = FALSE)  qdoc.q(text, quiet.fail = FALSE)"},{"path":"/reference/qdoc.question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a questionnaire question — qdoc.question","text":"text text question written proper QDOC format. quiet.fail parse question, silently return empty list (default FALSE).","code":""},{"path":"/reference/qdoc.question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a questionnaire question — qdoc.question","text":"object particular QDOC question family (e.g. qdoc.single_choice, qdoc.multiple_choice, qdoc.matrix).","code":""},{"path":"/reference/qdoc.question.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process a questionnaire question — qdoc.question","text":"","code":"# multiple-choice (single answer) qdoc.question(\"What is your gender?\\n\\nMale\\nFemale\\nOther\") #> What is your gender? #> ○ Male #> ○ Female #> ○ Other qdoc.question(\"[[Question:MC]]\\nWhat is your gender?[[Choices]]\\nMale\\nFemale\\nOther\") #> What is your gender? #> ○ Male #> ○ Female #> ○ Other  # multiple-choice (multi-answer) qdoc.question(\"What is your gender?[[MultiAnswer]]\\n\\nMale\\nFemale\\nOther\") #> What is your gender? #> ■ Male #> ■ Female #> ■ Other qdoc.question(\"[[Question:MC:MultiAnswer]]\\nWhat is your gender?\\n[[Choices]]\\nMale\\nFemale\\nOther\") #> What is your gender? #> ■ Male #> ■ Female #> ■ Other  # matrix qdoc.question(\"Please rate the following:\\n\\na\\nb\\nc\\n\\n1\\n2\\n3\") #> Please rate the following: #>  #>   | 1 | 2 | 3 |  #> ---------------- #> a | ○   ○   ○    #> b | ○   ○   ○    #> c | ○   ○   ○    qdoc.question(\"[[Question:Matrix]]\\nPlease rate the following:\\n[[Rows]]\\na\\nb\\nc\\n[[Columns]]\\n1\\n2\\n3\") #> Please rate the following: #>  #>   | 1 | 2 | 3 |  #> ---------------- #> a | ○   ○   ○    #> b | ○   ○   ○    #> c | ○   ○   ○"},{"path":"/reference/read_qdoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a questionnaire — read_qdoc","title":"Process a questionnaire — read_qdoc","text":"Takes questionnaire written proper QDOC format generates object ready uploaded survey. See vignette(\"qdocs\") guide QDOC format.","code":""},{"path":"/reference/read_qdoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a questionnaire — read_qdoc","text":"","code":"read_qdoc(file = NULL, gdoc = NULL, text = NULL, oauth_token = get_token())"},{"path":"/reference/read_qdoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a questionnaire — read_qdoc","text":"file File questionnaire written proper QDOC format. gdoc File Google Drive Google Doc questionnaire written proper QDOC format. See drive_download acceptable formats (e.g. URL, file ID, dribble object fancy). text Character string written proper QDOC format. oauth_token OAuth 2.0 token (needed questionnaire references question bank templates). default, retrieved get_token().","code":""},{"path":"/reference/read_qdoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a questionnaire — read_qdoc","text":"Output class qdoc.","code":""},{"path":"/reference/read_qdoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process a questionnaire — read_qdoc","text":"","code":"if (FALSE) { ## not run data(qdocs)  set_token(\"XXXXXXX\")  read_qdoc(text = qdoc.simple) # simple format read_qdoc(text = qdoc.adv)    # advanced format }"},{"path":"/reference/set_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SurveyMonkey OAuth Token — set_token","title":"Set SurveyMonkey OAuth Token — set_token","text":"Sets option 'sm_oauth_token' survey monkey API. Token used authorization headers requests.","code":""},{"path":"/reference/set_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SurveyMonkey OAuth Token — set_token","text":"","code":"set_token(oauth_token)"},{"path":"/reference/set_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SurveyMonkey OAuth Token — set_token","text":"oauth_token survey monkey OAuth 2.0 token.","code":""},{"path":"/reference/simu_moe.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate the margin of error for an overall survey or a single question — simu_moe","title":"Simulate the margin of error for an overall survey or a single question — simu_moe","text":"overall survey: given weights /sample size, maximum margin error gives us upper bound margin error y/n questions across entire survey – estimating hypothetical y/n question 50/50 (inherently uncertain population estimand).","code":""},{"path":"/reference/simu_moe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate the margin of error for an overall survey or a single question — simu_moe","text":"","code":"simu_moe(   .data = NULL,   weights = NULL,   n = NULL,   x = NULL,   conf = 0.95,   sims = 5000,   random = FALSE )"},{"path":"/reference/simu_moe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate the margin of error for an overall survey or a single question — simu_moe","text":".data data frame optionally pipe dplyr-style (see example). weights vector sample weights used adjust sample (optional n x specified). n sample size suvrey (needed weights x specified). x particular question estimate margin error (specified, estimate survey's MOE instead). conf level statistical confidence estimate error. sims number bootstrap re-samples perform order simulate sampling distribution. random whether return different, random estimates every time.","code":""},{"path":"/reference/simu_moe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate the margin of error for an overall survey or a single question — simu_moe","text":"survey margin error (MOE) \"modeled error\" overall survey question interest.","code":""},{"path":"/reference/simu_moe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate the margin of error for an overall survey or a single question — simu_moe","text":"single question: given vector sample responses /weights, margin error estimates margin error simulating sampling distribution. Estimates via simulation tend conservative (larger) using formulaic margin error (est_modeled_error) incorporates variance weights. method recommended non-probability surveys unknown sampling mechanisms (e.g. river samples).","code":""},{"path":"/reference/simu_moe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate the margin of error for an overall survey or a single question — simu_moe","text":"","code":"data(ev22) if (FALSE) { ## not run  # Unweighted maximum margin of error simu_moe(n = nrow(ev22)) simu_moe(weights = rep(1, nrow(ev22)))  # Weighted maximum margin of error simu_moe(weights = ev22$weight_genpop)  # Unweighted margin of error for specific question simu_moe(x = ev22$ev_heard_1)  # Weighted margin of error for specific question ev22 %>%   filter(!is.na(weight_genpop)) %>%   simu_moe(x = ev_heard_1, weights = weight_genpop) }"},{"path":"/reference/smda23.html","id":null,"dir":"Reference","previous_headings":"","what":"SVMK Social Media Usage 2023 Study — smda23","title":"SVMK Social Media Usage 2023 Study — smda23","text":"Simulated data based real tracker study conducted SurveyMonkey Research Insights Team social media usage behaviors/attitudes.","code":""},{"path":"/reference/smda23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVMK Social Media Usage 2023 Study — smda23","text":"","code":"smda23"},{"path":"/reference/smda23.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SVMK Social Media Usage 2023 Study — smda23","text":"simulated data frame raw survey responses 4000 rows 81 columns following identifying variables respondent (mostly redacted): collector_id Survey collector ID (redacted) collection_mode Survey collection mode survey_id Survey ID (redacted) response_id Unique respondent ID (redacted) response_status Response staus date_created Date response started date_modified Date response last modified first_name Respondent's first name (redacted) last_name Respondent's last name (redacted) email_address Respondent's email address (redacted) ip_address Respondent's IP address (redacted)","code":""},{"path":"/reference/std_demo_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Code demographic variables in responses — std_demo_vars","title":"Code demographic variables in responses — std_demo_vars","text":"Given dataframe survey responses, look standard SurveyMonkey demographic questions code/recode new variables banner-, plot-, analysis-friendly. Use code_std_demo_vars() perform standard demographic recodes, select specific function need. Run std_demo_vars() return full index SurveyMonkey's standard demographic variables.","code":""},{"path":"/reference/std_demo_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code demographic variables in responses — std_demo_vars","text":"","code":"std_demo_vars(data)"},{"path":"/reference/std_demo_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code demographic variables in responses — std_demo_vars","text":"data Input data frame survey responses.","code":""},{"path":"/reference/std_demo_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Code demographic variables in responses — std_demo_vars","text":"Survey data frame new (updated) columns corresponding discoverable demographic variables respondents.","code":""},{"path":"/reference/upload_banners.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload banners file to Google Drive — upload_banners","title":"Upload banners file to Google Drive — upload_banners","text":"Take output call make_banners file path Excel sheet saved upload Google Drive location choice.","code":""},{"path":"/reference/upload_banners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload banners file to Google Drive — upload_banners","text":"","code":"upload_banners(   banners.output = NULL,   file.path = NULL,   drive.file.name = NULL,   drive.folder.path,   drive.overwrite = TRUE )"},{"path":"/reference/upload_banners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload banners file to Google Drive — upload_banners","text":"banners.output output list call make_banners(). Must specify either file.path. file.path local file path save banners .xlsx file. Must specify either banners.output. drive.file.name name Google Drive sheets file. Must specify inputting banners.output file.path specified (case default name file.path). drive.folder.path folder path Google Drive upload banners spreadsheet. drive.overwrite drive.folder.path specified, whether overwrite/update file Google Drive already exists; otherwise upload file name updated timestamp.","code":""},{"path":"/reference/upload_banners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload banners file to Google Drive — upload_banners","text":"","code":"data(ev22) if (FALSE) { ## not run # Prepare data for banners ev22.coded = ev22 %>%   let(     ## code/label categorical variables     age3 = recode(age,                   \"18-34\" = 18 %thru% 34 ~ 1,                    \"35-64\" = 35 %thru% 64 ~ 2,                    \"65+\"   = 65 %thru% hi ~ 3),     gender  = recode(gender,                      \"Male\"   = 1 ~ 1,                      \"Female\" = 2 ~ 2),     income3 = recode(as.numeric(income),                      \"<$50k\"     = 1 %thru% 3 ~ 1,                      \"$50k-100k\" = 4 %thru% 5 ~ 2,                      \">$100k\"    = 6 %thru% 7 ~ 3,                      \"No answer\" = 8 ~ 4),     educ2 = recode(as.numeric(education),                    \"<HS-College\" = 1 %thru% 4 ~ 1,                    \">College\"    = 5 %thru% 6 ~ 2),     purchase = recode(purchase,                       \"Purchased new\"                            = 1 ~ 1,                       \"Purchased used (non-certified pre-owned)\" = 2 ~ 2,                       \"Purchased used (certified pre-owned)\"     = 3 ~ 3,                       \"Leased new\"                               = 4 ~ 4,                       \"Leased used\"                              = 5 ~ 5,                       \"Other\"                                    = 6 ~ 6),     vehage = recode(vehage,                     \"Less than 1 year old\"   = 1 ~ 1,                     \"1 - 2 years old\"        = 2 ~ 2,                     \"3 - 5 years old\"        = 3 ~ 3,                     \"6 - 10 years old\"       = 4 ~ 4,                     \"More than 10 years old\" = 5 ~ 5),     vehcost = recode(vehcost,                      \"Under $5,000\"      = 1 ~ 1,                      \"$5,000 - $9,999\"   = 2 ~ 2,                      \"$10,000 - $19,999\" = 3 ~ 3,                      \"$20,000 - $29,999\" = 4 ~ 4,                      \"$30,000 - $39,999\" = 5 ~ 5,                      \"$40,000 - $49,999\" = 6 ~ 6,                      \"$50,000 - $59,999\" = 7 ~ 7,                      \"$60,000 or more\"   = 8 ~ 8),     ## label multi-response variables     ## note: make sure to re-code dichotomous \"one-hot encoded\" columns into distinct level     ev_heard_1 = recode(ev_heard_1, \"Audi e-tron\" = 1 ~ 1),     ev_heard_2 = recode(ev_heard_2, \"BMW i3\" = 1 ~ 2),     ev_heard_3 = recode(ev_heard_3, \"Cadillac LYRIQ\" = 1 ~ 3),     ev_heard_4 = recode(ev_heard_4, \"Chevrolet Bolt\" = 1 ~ 4),     ev_heard_5 = recode(ev_heard_5, \"Faraday Future\" = 1 ~ 5),     ev_heard_6 = recode(ev_heard_6, \"Fisker\" = 1 ~ 6),     ev_heard_7 = recode(ev_heard_7, \"Hyundai Electric\" = 1 ~ 7),     ev_heard_8 = recode(ev_heard_8, \"Jaguar I-Pace\" = 1 ~ 8),     ev_heard_9 = recode(ev_heard_9, \"Kia Niro EV\" = 1 ~ 9),     ev_heard_10 = recode(ev_heard_10, \"Lucid Motors\" = 1 ~ 10),          mech_factors_1 = recode(mech_factors_1, \"Price / affordability\" = 1 ~ 1),     mech_factors_2 = recode(mech_factors_2, \"Convenience\" = 1 ~ 2),     mech_factors_3 = recode(mech_factors_3, \"Trust / relationship\" = 1 ~ 3),     mech_factors_4 = recode(mech_factors_4, \"Availability\" = 1 ~ 4),          sub_services_1 = recode(sub_services_1, \"In-car internet\" = 1 ~ 1),     sub_services_2 = recode(sub_services_1, \"Remote car start capability\" = 1 ~ 2),     sub_services_3 = recode(sub_services_1, \"Live traffic / navigation\" = 1 ~ 3),     sub_services_4 = recode(sub_services_1, \"In-vehicle safety and security\" = 1 ~ 4),     sub_services_5 = recode(sub_services_1, \"Multiple driver profiles\" = 1 ~ 5),     sub_services_6 = recode(sub_services_1, \"Cloud dash cam monitoring\" = 1 ~ 6),     sub_services_7 = recode(sub_services_1, \"Car software updates\" = 1 ~ 7),     sub_services_8 = recode(sub_services_1, \"AI- and self-driving capabilities\" = 1 ~ 8),     sub_services_9 = recode(sub_services_1, \"Car-only media and streaming services\" = 1 ~ 9),     sub_services_10 = recode(sub_services_1, \"Heated seats\" = 1 ~ 10)   ) %>%   apply_labels(gender         = \"Gender\",                age3           = \"Age: 3 categories\",                educ2          = \"Education\",                income3        = \"Income\",                vehage         = \"How old is your main vehicle?\",                vehcost        = \"In total, how much did you pay to buy or lease your main vehicle?\",                purchase       = \"How did you purchase or lease your main vehicle?\",                ## note: for multiresponse variables, only need to name one column                ev_heard_1     = \"Which of the following electric vehicles have you heard of?\",                mech_factors_1 = \"Select the top 3 factors that are most important to you when selecting an auto repair provider:\",                sub_services_1 = \"Which of the following services would you be willing to pay a recurring subscription for in a car?\")  # Make and save banners ev22.banners <- ev22.coded %>%   make_banners(row.vars            = list(\"purchase\",\"vehage\",\"ev_heard*\",c(\"mech_factors_1\",\"mech_factors_2\",\"mech_factors_3\",\"mech_factors_4\")),                 col.vars            = list(\"age3\",\"educ2\",c(\"sub_services_1\",\"sub_services_2\",\"sub_services_3\",\"sub_services_4\")),                 weight.var          = \"weight_genpop\",                 date.var            = \"response_date\",                 total.row.position  = \"below\",                 preview             = TRUE) %>%   write_banners(file.path          = \"ev22.xlsx\",                 file.overwrite     = TRUE,                 title              = \"Electric Vehicles Study\",                 logo               = \"mntv\") %>%   upload_banners(drive.overwrite   = TRUE,                  drive.file.name   = \"EV Study Crosstabs\",                  drive.folder.path = \"https://drive.google.com/drive/u/1/folders/XXXX\") }"},{"path":"/reference/upload_qdoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","title":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","text":"Takes processed qdoc object uploads SurveyMonkey account associated token selected title, location, format.","code":""},{"path":"/reference/upload_qdoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","text":"","code":"upload_qdoc(   qdoc,   title,   from_template_id = NULL,   from_survey_id = NULL,   from_team_template_id = NULL,   nickname = NULL,   language = \"en\",   folder_id = NULL,   theme_id = NULL,   ...,   oauth_token = get_token() )"},{"path":"/reference/upload_qdoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","text":"qdoc qdoc object survey questionnaire (e.g. via read_qdoc) uploaded. title Name survey uploaded account. from_template_id Survey template copy , see browse_templates (optional). from_survey_id Survey id copy , see browse_surveys (optional). from_team_template_id Team survey template copy , see browse_templates (optional). nickname Survey nickname (optional). language Survey language, default 'en'. folder_id Adds survey folder id (optional). theme_id Creates survey using theme provided (optional). ... additional parameters upload POST call (see API reference). oauth_token OAuth 2.0 token. default, retrieved get_token().","code":""},{"path":"/reference/upload_qdoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","text":"Upload status metadata (e.g. assigned survey ID, edit URL) dataframe.","code":""},{"path":"/reference/upload_qdoc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","text":"SurveyMonkey POST /survey API V3 https://developer.surveymonkey.com/api/v3/#api-endpoints-post-surveys.","code":""},{"path":"/reference/upload_qdoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload processed questionnaire to SurveyMonkey — upload_qdoc","text":"","code":"if (FALSE) { ## not run data(qdocs)  set_token(\"XXXXXXX\")  my_qdoc <- read_qdoc(text = qdoc.simple)   upload_qdoc(my_qdoc, title = \"My Survey\") }"},{"path":"/reference/weight_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight your survey — weight_to","title":"Weight your survey — weight_to","text":"Generate statistical weights survey responses better represent population interest.","code":""},{"path":"/reference/weight_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weight your survey — weight_to","text":"","code":"weight_to(   data,   target = \"us_genpop_acs18\",   auto.remove = TRUE,   initial.weights = NULL,   trim.weights = c(0.01, 0.99),   verbose = TRUE )"},{"path":"/reference/weight_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weight your survey — weight_to","text":"data input data frame survey responses. target either name target population (run list_targets() options) list dataframes corresponding different population distributions weight survey . auto.remove remove weighting variables found survey. initial.weights initial set weights starting point raking algorithm. trim.weights percentiles trim weights (default 0.01 .99, 1% 99%); can specify either upper percentile lower upper percentile. verbose output helpful progress warning messages (recommended).","code":""},{"path":"/reference/weight_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weight your survey — weight_to","text":"output contains (1) estimated weights (2) summary weights affect data","code":""},{"path":"/reference/weight_to.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weight your survey — weight_to","text":"default SurveyMonkey weight surveys via raking. overview raking, see guide.","code":""},{"path":"/reference/weight_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weight your survey — weight_to","text":"","code":"if (FALSE) { ## not run data(\"smda23\") tgt <- get_target(\"us_genpop_acs19\") wtd <- weight_to(smda23, target = tgt)  hist(wtd$weights) print(wtd$weight.summary) }"},{"path":"/reference/write_banners.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and save banner object to file — write_banners","title":"Format and save banner object to file — write_banners","text":"Take output call make_banners, populate spreadsheet banner data, format/stylize SurveyMonkey research format, save locally. Currently allows one level nesting columns.","code":""},{"path":"/reference/write_banners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and save banner object to file — write_banners","text":"","code":"write_banners(   banners.output,   title = \"Main\",   file.path,   file.overwrite = TRUE,   file.append = FALSE,   drive.folder.path = NULL,   drive.overwrite = TRUE,   tab.name = \"Main\",   logo = NULL,   include.moe = TRUE,   include.dates = TRUE,   date.var = \"response_date\",   weight.var = NULL,   ... )"},{"path":"/reference/write_banners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and save banner object to file — write_banners","text":"banners.output output list call make_banners(). title title tab/sheet. file.path local file path save banners .xlsx file. file.overwrite whether overwrite file specified file.path; otherwise keep update file path. file.append whether append current tab file specified file.path exists; already tab name specified, update tab name. tab.name name tab/sheet populate. include.moe whether include Margin Error survey banner headers. include.dates whether include date range survey responses banner headers. date.var include.dates set TRUE, date variable look data used create banners.output. weight.var column data used create banners.output corresponding weights Margin Error estimate.","code":""},{"path":"/reference/write_banners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format and save banner object to file — write_banners","text":"fully formatted spreadsheet form openxlsx object.","code":""},{"path":"/reference/write_banners.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format and save banner object to file — write_banners","text":"","code":"data(ev22) if (FALSE) { ## not run # Prepare data for banners ev22.coded = ev22 %>%   let(     ## code/label categorical variables     age3 = recode(age,                   \"18-34\" = 18 %thru% 34 ~ 1,                    \"35-64\" = 35 %thru% 64 ~ 2,                    \"65+\"   = 65 %thru% hi ~ 3),     gender  = recode(gender,                      \"Male\"   = 1 ~ 1,                      \"Female\" = 2 ~ 2),     income3 = recode(as.numeric(income),                      \"<$50k\"     = 1 %thru% 3 ~ 1,                      \"$50k-100k\" = 4 %thru% 5 ~ 2,                      \">$100k\"    = 6 %thru% 7 ~ 3,                      \"No answer\" = 8 ~ 4),     educ2 = recode(as.numeric(education),                    \"<HS-College\" = 1 %thru% 4 ~ 1,                    \">College\"    = 5 %thru% 6 ~ 2),     purchase = recode(purchase,                       \"Purchased new\"                            = 1 ~ 1,                       \"Purchased used (non-certified pre-owned)\" = 2 ~ 2,                       \"Purchased used (certified pre-owned)\"     = 3 ~ 3,                       \"Leased new\"                               = 4 ~ 4,                       \"Leased used\"                              = 5 ~ 5,                       \"Other\"                                    = 6 ~ 6),     vehage = recode(vehage,                     \"Less than 1 year old\"   = 1 ~ 1,                     \"1 - 2 years old\"        = 2 ~ 2,                     \"3 - 5 years old\"        = 3 ~ 3,                     \"6 - 10 years old\"       = 4 ~ 4,                     \"More than 10 years old\" = 5 ~ 5),     vehcost = recode(vehcost,                      \"Under $5,000\"      = 1 ~ 1,                      \"$5,000 - $9,999\"   = 2 ~ 2,                      \"$10,000 - $19,999\" = 3 ~ 3,                      \"$20,000 - $29,999\" = 4 ~ 4,                      \"$30,000 - $39,999\" = 5 ~ 5,                      \"$40,000 - $49,999\" = 6 ~ 6,                      \"$50,000 - $59,999\" = 7 ~ 7,                      \"$60,000 or more\"   = 8 ~ 8),     ## label multi-response variables     ## note: make sure to re-code dichotomous \"one-hot encoded\" columns into distinct level     ev_heard_1 = recode(ev_heard_1, \"Audi e-tron\" = 1 ~ 1),     ev_heard_2 = recode(ev_heard_2, \"BMW i3\" = 1 ~ 2),     ev_heard_3 = recode(ev_heard_3, \"Cadillac LYRIQ\" = 1 ~ 3),     ev_heard_4 = recode(ev_heard_4, \"Chevrolet Bolt\" = 1 ~ 4),     ev_heard_5 = recode(ev_heard_5, \"Faraday Future\" = 1 ~ 5),     ev_heard_6 = recode(ev_heard_6, \"Fisker\" = 1 ~ 6),     ev_heard_7 = recode(ev_heard_7, \"Hyundai Electric\" = 1 ~ 7),     ev_heard_8 = recode(ev_heard_8, \"Jaguar I-Pace\" = 1 ~ 8),     ev_heard_9 = recode(ev_heard_9, \"Kia Niro EV\" = 1 ~ 9),     ev_heard_10 = recode(ev_heard_10, \"Lucid Motors\" = 1 ~ 10),          mech_factors_1 = recode(mech_factors_1, \"Price / affordability\" = 1 ~ 1),     mech_factors_2 = recode(mech_factors_2, \"Convenience\" = 1 ~ 2),     mech_factors_3 = recode(mech_factors_3, \"Trust / relationship\" = 1 ~ 3),     mech_factors_4 = recode(mech_factors_4, \"Availability\" = 1 ~ 4),          sub_services_1 = recode(sub_services_1, \"In-car internet\" = 1 ~ 1),     sub_services_2 = recode(sub_services_1, \"Remote car start capability\" = 1 ~ 2),     sub_services_3 = recode(sub_services_1, \"Live traffic / navigation\" = 1 ~ 3),     sub_services_4 = recode(sub_services_1, \"In-vehicle safety and security\" = 1 ~ 4),     sub_services_5 = recode(sub_services_1, \"Multiple driver profiles\" = 1 ~ 5),     sub_services_6 = recode(sub_services_1, \"Cloud dash cam monitoring\" = 1 ~ 6),     sub_services_7 = recode(sub_services_1, \"Car software updates\" = 1 ~ 7),     sub_services_8 = recode(sub_services_1, \"AI- and self-driving capabilities\" = 1 ~ 8),     sub_services_9 = recode(sub_services_1, \"Car-only media and streaming services\" = 1 ~ 9),     sub_services_10 = recode(sub_services_1, \"Heated seats\" = 1 ~ 10)   ) %>%   apply_labels(gender         = \"Gender\",                age3           = \"Age: 3 categories\",                educ2          = \"Education\",                income3        = \"Income\",                vehage         = \"How old is your main vehicle?\",                vehcost        = \"In total, how much did you pay to buy or lease your main vehicle?\",                purchase       = \"How did you purchase or lease your main vehicle?\",                ## note: for multiresponse variables, only need to name one column                ev_heard_1     = \"Which of the following electric vehicles have you heard of?\",                mech_factors_1 = \"Select the top 3 factors that are most important to you when selecting an auto repair provider:\",                sub_services_1 = \"Which of the following services would you be willing to pay a recurring subscription for in a car?\")  # Make and save banners   ev22.banners <- ev22.coded %>%   make_banners(row.vars            = list(\"purchase\",\"vehage\",\"ev_heard*\",c(\"mech_factors_1\",\"mech_factors_2\",\"mech_factors_3\",\"mech_factors_4\")),                 col.vars            = list(\"age3\",\"educ2\",c(\"sub_services_1\",\"sub_services_2\",\"sub_services_3\",\"sub_services_4\")),                 weight.var          = \"weight_genpop\",                 date.var            = \"response_date\",                 total.row.position  = \"below\",                 preview             = TRUE) %>%   write_banners(file.path          = \"ev22.xlsx\",                 file.overwrite     = TRUE,                 title              = \"Electric Vehicles Study\",                 logo               = \"mntv\") %>%   upload_banners(drive.overwrite   = TRUE,                  drive.file.name   = \"EVs Crosstabs\",                  drive.folder.path = \"https://drive.google.com/drive/u/1/folders/XXXX\") }"},{"path":"/news/index.html","id":"svmkr-v10","dir":"Changelog","previous_headings":"","what":"svmkR v1.0","title":"svmkR v1.0","text":"NEW: Weight surveys using available population targets. Ex: weight_to(): simple canned function crosswalk survey available target population weight distribution list_targets(): list target population distributions available package read_target(): read target available package NEW: Added ability reverse engineer skip rules (find_skip_rules()) survey responses based completion patterns. NEW: Added demographic variable re-coding module Unit tests added modules. Stabilized banner creation code. pkgdown web page created package. End--end tutorial created via vignette(\"svmkR\").","code":""},{"path":"/news/index.html","id":"svmkr-v03","dir":"Changelog","previous_headings":"","what":"svmkR v0.3","title":"svmkR v0.3","text":"read_qdoc(): read questionnaire txt file upload_qdoc(): upload questionnaire file Separate write_banners() write_banners() upload_banners()","code":""},{"path":"/news/index.html","id":"svmkr-v022","dir":"Changelog","previous_headings":"","what":"svmkR v0.2.2","title":"svmkR v0.2.2","text":"Fixed bug downloading survey named columns (.e. col_names = \"name\") parse_survey() properly parses multi-answer matrix questions (one column every question-row-column triplet)","code":""}]
